name: Scrape
on:
  schedule:
    - cron: "*/9 * * * *"
  workflow_dispatch:
jobs:
  scrape:
    name: "Scrape latest photo"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      - id: scrape
        name: "(run) deno task scrape"
        env:
          DENO_KV_PATH: ${{ secrets.DENO_KV_PATH }}
          DENO_KV_ACCESS_TOKEN: ${{ secrets.DENO_KV_ACCESS_TOKEN }}
        shell: bash
        run: deno task scrape 2>&1

      - name: "(run) upload artifacts"
        uses: actions/upload-artifact@v3
        with:
          path: ${{ steps.scrape.outputs.filename }}
          name: ${{ steps.scrape.outputs.hash }}
        
      - if: ${{ success() }}
        name: "(git) commit + push"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TIME: ${{ steps.scrape.outputs.timestamp }}
          SIZE: ${{ steps.scrape.outputs.size }}
          DIFF: ${{ steps.scrape.outputs.diff }}
          HASH: ${{ steps.scrape.outputs.hash }}
          PATH: ${{ steps.scrape.outputs.filename }}
          KEY: ${{ steps.scrape.outputs.key }}
        run: |
          # update latest.jpg in its own commit
          git commit ./assets/latest.jpg -m "[skip ci] ðŸ†™ update latest.jpg (${DIFF})"
          # now add the newly scraped photo
          git add ./assets
          # construct a commit message with helpful details in it
          message="[skip ci] ðŸ“¸ new photo found at ${TIME}\\n\\n"
          message+="Here are some details regarding the new image:\\n"
          message+="- time: ${TIME} UTC\\n- key : ${KEY}\\n"
          message+="- path: ${PATH}\\n- hash: ${HASH-}\\n"
          message+="- size: ${SIZE}\\n- diff: ${DIFF:-"?"}\\n\\n"
          message+="NOTE: This commit message was generated automatically."
          # commit and push it obvs
          git commit -m "${message}" && git push
