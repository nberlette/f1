name: Scrape
on:
  schedule:
    - cron: "*/10 * * * *"
  workflow_dispatch:
jobs:
  scrape:
    name: "Scrape latest photo"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      - id: scrape
        name: "(run) deno task scrape"
        env:
          DENO_KV_PATH: ${{ secrets.DENO_KV_PATH }}
          DENO_KV_ACCESS_TOKEN: ${{ secrets.DENO_KV_ACCESS_TOKEN }}
        shell: bash
        run: |
          if ! deno task scrape 2>&1; then
            echo $'\e[1;101m FAILED \e[0m The scrape was terminated after several failed attempts to fetch new content.\n'
            echo $'Possibly caused by the source feed being down.\n'
            exit 0 # prevent hard failure. just do nothing.
          fi

      - name: "(run) upload artifacts"
        uses: actions/upload-artifact@v3
        with:
          path: ${{ steps.scrape.outputs.filename }}
          name: ${{ steps.scrape.outputs.hash }}
        
      - if: ${{ success() }}
        name: "(git) commit + push"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TIME: ${{ steps.scrape.outputs.timestamp }}
          SIZE: ${{ steps.scrape.outputs.size }}
          DIFF: ${{ steps.scrape.outputs.diff }}
          HASH: ${{ steps.scrape.outputs.hash }}
          FILE: ${{ steps.scrape.outputs.filename }}
          KEY: ${{ steps.scrape.outputs.key }}
        run: |
          git add ./assets/latest.jpg 
          git commit -m "chore: ðŸ“¸ update latest.jpg"
          
          git add ./assets

          message='[%s]: ðŸ“¸ new photo captured\n\n'\
          'Here are some stats and details of the new image:\n'\
          '- time: %s\n- hash: %s\n- size: %s B (diff %s B)\n- key : %s\n- path: %s\n\n'\
          'View the new image:\n\t%s\n\n'\
          'NOTE: This commit message was generated automatically.'
          message="$(printf "$message" "$TIME" "$TIME" "$KEY" "$FILE" "$HASH" "$SIZE" "$DIFF" "$VIEW")"
          git commit -m "${message}" && git push
